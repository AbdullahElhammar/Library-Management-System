// <auto-generated />
using System;
using LibraryManagementSystem.DAL.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryManagementSystem.DAL.Migrations
{
    [DbContext(typeof(SystemContext))]
    partial class SystemContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookPatron", b =>
                {
                    b.Property<int>("BooksId")
                        .HasColumnType("int");

                    b.Property<int>("PatronsId")
                        .HasColumnType("int");

                    b.HasKey("BooksId", "PatronsId");

                    b.HasIndex("PatronsId");

                    b.ToTable("BookPatron");
                });

            modelBuilder.Entity("LibraryManagementSystem.DAL.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BookISBN")
                        .HasColumnType("int");

                    b.Property<int>("PublicationYear")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Book");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Ibn Alqim",
                            BookISBN = 1,
                            PublicationYear = 2000,
                            Title = "Aldaa w Aldwaa"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Albokhary",
                            BookISBN = 2,
                            PublicationYear = 1200,
                            Title = "Albokhary"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Ahmed Khalil",
                            BookISBN = 3,
                            PublicationYear = 2010,
                            Title = "Mindset Of Solution"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Ibn Alqim",
                            BookISBN = 4,
                            PublicationYear = 2002,
                            Title = "Benefits"
                        });
                });

            modelBuilder.Entity("LibraryManagementSystem.DAL.Data.Models.BorrowingRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime>("BorrowDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PatronId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("PatronId");

                    b.ToTable("BorrowingRecord");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            BookId = 1,
                            BorrowDate = new DateTime(2024, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PatronId = 1,
                            ReturnDate = new DateTime(2024, 4, 24, 14, 58, 53, 927, DateTimeKind.Local).AddTicks(3961)
                        },
                        new
                        {
                            Id = 3,
                            BookId = 2,
                            BorrowDate = new DateTime(2024, 3, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PatronId = 2,
                            ReturnDate = new DateTime(2024, 4, 24, 14, 58, 53, 927, DateTimeKind.Local).AddTicks(3995)
                        },
                        new
                        {
                            Id = 1,
                            BookId = 4,
                            BorrowDate = new DateTime(2024, 3, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PatronId = 3,
                            ReturnDate = new DateTime(2024, 4, 24, 14, 58, 53, 927, DateTimeKind.Local).AddTicks(4000)
                        },
                        new
                        {
                            Id = 4,
                            BookId = 1,
                            BorrowDate = new DateTime(2024, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PatronId = 4,
                            ReturnDate = new DateTime(2024, 4, 24, 14, 58, 53, 927, DateTimeKind.Local).AddTicks(4005)
                        });
                });

            modelBuilder.Entity("LibraryManagementSystem.DAL.Patron", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Patron");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "cairo",
                            Name = "ahmed"
                        },
                        new
                        {
                            Id = 2,
                            Address = "alex",
                            Name = "ali"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Mansoura",
                            Name = "abdullah"
                        },
                        new
                        {
                            Id = 4,
                            Address = "minia",
                            Name = "khalid"
                        });
                });

            modelBuilder.Entity("BookPatron", b =>
                {
                    b.HasOne("LibraryManagementSystem.DAL.Book", null)
                        .WithMany()
                        .HasForeignKey("BooksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryManagementSystem.DAL.Patron", null)
                        .WithMany()
                        .HasForeignKey("PatronsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LibraryManagementSystem.DAL.Data.Models.BorrowingRecord", b =>
                {
                    b.HasOne("LibraryManagementSystem.DAL.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryManagementSystem.DAL.Patron", "Patron")
                        .WithMany()
                        .HasForeignKey("PatronId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Patron");
                });
#pragma warning restore 612, 618
        }
    }
}
